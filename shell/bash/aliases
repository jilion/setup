# Command Enhancements

# Utility
alias reload="source $JIME_SETUP_PATH/shell/bash/aliases"
alias ea="mate -w $JIME_SETUP_PATH/shell/bash/aliases && reload" # Edit aliases

# Jime
alias js="cd $JIME_SETUP_PATH; clear"
alias jj="cd $JIME_CODE_PATH/Jime.com; clear"
alias jf="cd $JIME_CODE_PATH/Jime.org; clear"
alias ju="cd $JIME_CODE_PATH/upload; clear"
alias jb="cd $JIME_CODE_PATH/backstage; clear"
alias jl="cd $JIME_CODE_PATH/locations; clear"

# Jilion 
alias wd="cd $JILION_PATH/Customers/Mnemis/webdoc; clear"
alias ca="cd $JILION_PATH/Customers/Caprices/caprices; clear"
alias mi="cd $JILION_PATH/Customers/Mintt/mintt; clear"
alias ji="cd $JILION_PATH/Products/Jilion.com/jilion.com; clear"
alias sb="cd $JILION_PATH/Products/Jilion.com/sublime; clear"
alias sv="cd $JILION_PATH/Products/SublimeVideo/sublime_video; clear"
alias msv="cd $JILION_PATH/Products/MySublimeVideo/my.sublimevideo.net; clear"

# Common -- Some are from Damian Conway
alias l="ls -lh"
alias la="ls -lah"
alias ll="la"

alias h="history"
alias o="open ."
alias ..="cd .."
alias cd..="cd .."

# Function
function take() { 
  mkdir -p "$1"
  cd "$1" 
}
alias k9="killall -9"
function killnamed () { 
  ps ax | grep $1 | cut -d ' ' -f 2 | xargs kill 
}
function zipr() {
  zip -r $1.zip $1
}

# Processes
alias tu="top -o cpu" # cpu
alias tm="top -o vsize" # memory

# =======
# = GIT =
# =======
alias ungit="find . -name '.git' -exec rm -rf {} \;"
alias gb="git branch"
alias gba="git branch -a"
alias gc="git commit -v"
alias gca="git commit -v -a"
# Commit pending changes and quote all args as message
function gg() { 
  git commit -v -a -m "$*"
}
alias gco="git checkout"
alias gd="git diff"
alias gdm="git diff master"
alias gl="git pull"
alias gnp="git-notpushed"
alias gp="git push"
alias gst="git status"
alias gt="git status"
alias g="git status"
alias eg="mate .git/config"
alias gx="gitx"
# Git clone from GitHub
function gch() {
  git clone git://github.com/$USER/$1.git
}

# Setup a tracking branch from [remote] [branch_name]
function gbt() { 
  git branch --track $2 $1/$2 && git checkout $2 
}
# Quickly clobber a file and checkout
function grf() { 
  rm $1
  git checkout $1 
}
# Call from inside an initialized Git repo, with the name of the repo.
function new-git() {
  ssh git@example.com "mkdir $1.git && cd $1.git && git --bare init"
  git remote add origin git@example.com:$1.git
  git push origin master
  git config branch.master.remote origin
  git config branch.master.merge refs/heads/master
  git config push.default current
}

# TextMate
alias m="mate"
alias m.="mate ."
alias mm="mate ."
alias mr="mate app config db doc public/javascripts lib lib/tasks done public/stylesheets vendor/gems vendor/plugins spec rspec.watchr features test todo todo.todo tools Rakefile README CHANGELOG cucumber.yml .gitignore .gems .git/config config.ru Gemfile Gemfile.lock"

# Ruby
alias r="rake"
alias irb="irb --readline -r irb/completion"

# rugygem
alias gu="gem update"
alias gi="gem install"
alias gui="gem uninstall"

# bundler
alias bi='bundle install'
alias bir='bundle install --relock'
alias bl='bundle lock'
alias bp='bundle package'
alias bs='bundle show'

# open_gem
alias go="gem open --latest"
alias gr="gem read --latest"

# Rails
alias ttr="touch tmp/restart.txt"
alias rr="rake routes"
alias sc="./script/console"
alias sg="./script/generate"
alias sd="./script/destroy"
alias sp="./script/plugin"
alias ss="./script/server"
alias ssu="./script/server -u"
alias ssp="./script/server -e production"
alias ssc="./script/server -p 3001 -e test"
alias ts="thin start"

alias dbtp="rake db:test:prepare"
alias dbm="rake db:migrate"
alias dbr="rake db:drop:all
           rake db:create:all
           rake db:migrate
           rake db:test:prepare
           rake db:seed
           annotate -p before"

alias dbp="rake db:populate"

alias dbrp="dbr && dbp"

alias tl="tail -f log/*.log"
alias tld="tail -f log/development.log"
alias tlt="tail -f log/test.log"
alias tlp="tail -f log/production.log"



# BDD
alias rs="rake spec"
alias rsa="rake spec:acceptance"
alias wr="bundle exec watchr rspec.watchr"
